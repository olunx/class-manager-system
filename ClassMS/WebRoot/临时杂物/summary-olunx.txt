-------------------------------------
0,action向前台传数据
-------------------------------------
	继承接口：ServletContextAware,RequestAware,ApplicationAware,SessionAware
	看数据保存时间的需要来选择
-------------------------------------
1,action间传递类型
-------------------------------------
redirect-action，plaintext已经不推荐使用了 
<result-types> 
	<result-type name="chain" class="com.opensymphony.xwork2.ActionChainResult"/> 
	<result-type name="dispatcher" class="org.apache.struts2.dispatcher.ServletDispatcherResult" default="true"/> 
	<result-type name="freemarker" class="org.apache.struts2.views.freemarker.FreemarkerResult"/> 
	<result-type name="httpheader" class="org.apache.struts2.dispatcher.HttpHeaderResult"/> 
	<result-type name="redirect" class="org.apache.struts2.dispatcher.ServletRedirectResult"/> 
	<result-type name="redirectAction" class="org.apache.struts2.dispatcher.ServletActionRedirectResult"/> 
	<result-type name="stream" class="org.apache.struts2.dispatcher.StreamResult"/> 
	<result-type name="velocity" class="org.apache.struts2.dispatcher.VelocityResult"/> 
	<result-type name="xslt" class="org.apache.struts2.views.xslt.XSLTResult"/> 
	<result-type name="plainText" class="org.apache.struts2.dispatcher.PlainTextResult" /> 
	<!-- Deprecated name form scheduled for removal in Struts 2.1.0. The camelCase versions are preferred. ...--> 
	<result-type name="redirect-action" class="org.apache.struts2.dispatcher.ServletActionRedirectResult"/> 
	<result-type name="plaintext" class="org.apache.struts2.dispatcher.PlainTextResult" /> 
</result-types> 
-------------------------------------
2,struts2上传文件，类型过滤。
-------------------------------------
在struts的action配置中加入
	<interceptor-ref name="fileUpload">
		<param name="allowedTypes">application/vnd.ms-excel,application/msword,application/octet-stream</param>
		<param name="maximumSize">10485760</param>
	</interceptor-ref>
	<interceptor-ref name="defaultStack"></interceptor-ref>
在拦截器中，文件类型在不同电脑会有不同的变化误差
在web.xml中加入
	<mime-mapping>
		<extension>xls</extension>
		<mime-type>application/vnd.ms-excel</mime-type>
	</mime-mapping>
文件类型可以再tomcat根目录/conf/web.xml中找到

注：在某些机器会出现上传文件类型不支持的问题
-------------------------------------
3,myeclipse8.0绿色版
-------------------------------------
解压路径为 D:\MyEclipse 8.0 ，解压到其他路径的话，会无法运行。如果需要改变路径的话，将下列位置的内容替换成你想要的就可以了：
1.D:\MyEclipse8\MyEclipse\myeclipse.ini 中的第7行 D:/MyEclipse 8.0 、第9行 D:/MyEclipse 8.0
2.D:\MyEclipse 8.0\MyEclipse\configuration\config.ini 中的第16行 D\:/MyEclipse 8.0、18行 D\:\\MyEclipse 8.0
3.D:\MyEclipse 8.0\MyEclipse\configuration\org.eclipse.equinox.simpleconfigurator\bundles.info中所有的 D:/MyEclipse 8.0
-------------------------------------
4,No result defined for action.....and result input 
-------------------------------------
在最近的strut2练习中遇到了一个非常隐蔽的问题，这个问题几乎花了我一天的时间。问题&解决方法如下：（project中的一部分代码）
    创建了一个用于跳转的PoiterAction，代码再简单不过了，只有一个返回SUCCESS字符串的execute方法。
    在struts.xml配置文件中配置了和SUCCESS对应的实体页面
    <result name="success">xxxxx.jsp</result>
    然后运行应用的时候调用该action时出现了 No result defined for action.....and result input 的错误。这个错误是没有在配置文件中给action添加所需要的
<result name="input">xxxxx.jsp</result>元素。
    这就觉得奇怪了！我并没有任何数据需要提交到该action中啊。
    最后做了很多的测试。原因是工程里有一个BaseAction的类，并且BaseAction使用了验证框架，有一个BaseAction-validation.xml的文件。
    而PoiterAction正好是BaseAction的一个子类，也继承了父类的验证框架，因此按照验证框架的运行流程来看这个问题就很明显了。由于验证框架在调用子类的时候首先加载父类的验证规则，然后等待输入，系统会找到input元素制定的JSP文件的输入信息，但是PoiterAction并没有input项，所以系统抛出No result defined for action.....and result input。
    删除了BaseAction-validation.xml文件后就可以正常运行了。

    结论：在开发的时候应该尽量不对基类做任何验证，虽然使用继承基类的验证框架可以减少工作量，但是有时会出现不必要的麻烦。应该对具体类实施验证。
--------------------------------------
5,解释一个关于Hibernate lazy的问题
--------------------------------------
解释一个关于Hibernate lazy的问题
2007-05-31 09:26作者：出处：论坛整理责任编辑：卢林嘉
使用Hibernate时意外报错:

Exception in thread "main" org.hibernate.LazyInitializationException: could not initialize proxy - the owning Session was closed
 at org.hibernate.proxy.AbstractLazyInitializer.initialize(AbstractLazyInitializer.java:53)
 at org.hibernate.proxy.AbstractLazyInitializer.getImplementation(AbstractLazyInitializer.java:84)
 at org.hibernate.proxy.CGLIBLazyInitializer.intercept(CGLIBLazyInitializer.java:134)
 at com.entry.database.bean.OaLoginLink$EnhancerByCGLIB$a418b18d.getName(<generated>)
 at test.Test.main(Test.java:145)
很是让我头痛,上网查看相关资料发现这样一个解决方式:

"org.hibernate.LazyInitializationException: could not initialize proxy"延迟抓取出的错,hb3对many-to-one的默认处理是lazy = "proxy"，没有搞懂到底怎么回事，把所有many-to-one,one-to-one都加上lazy="false"...

这个方法理论上没错,但是会让人产生误解,使人以为只是修改<set>中的lazy值,照做后程序依然会报错,看看下面的文章也许就明白了(注意最后一行红色标记)!

lazy initialization
集合(不包括数组)是可以延迟初始化的,意思是仅仅当应用程序需要访问时，才载入他们的值。
s = sessions.openSession();
User u = (User) s.find("from User u where u.name=?", userName,
Hibernate.STRING).get(0);
Map permissions = u.getPermissions();
s.connection().commit();
s.close();
Integer accessLevel = (Integer) permissions.get("accounts"); //Error!
因为在commit之前,permissions没有被用到,permission没有被初始化,而session被close了,导致permissions永远都无法load data.
解决办法:吧最后一行一道session被提交之前.
设置:
<set name="names" table="NAMES" lazy="true" order-by="name asc">
<key column="group_id"/>
<element column="NAME" type="string"/>
</set>

==================================

在做Spring1.2 + Hibernate 3 + struts demo时候遇到一个问题，编辑用户数据时候

用com.jeedev.service.dao.hibernate.UserHibernateDao 中 public TSysuser getUser(int userid) { } 方法，总是不能正常显示编辑数据。具体表现为：

参考 com.jeedev.service.dao.hibernate.UserHibernateDao 第32-45行

java代码:


 public TSysuser getUser(int userid) {

 if (this.getHibernateTemplate() == null) { 
 System.out.println("error at there"); 
 return null; 
 }

 TSysuser edituser= (TSysuser) getHibernateTemplate().load(TSysuser.class, new Integer(userid));

 System.out.println(edituser.getUsername()); 
 System.out.println(edituser.getDeptno());

 return edituser; 
 }
 

如果删除上面的 
java代码: 
 System.out.println(edituser.getUsername()); 
 System.out.println(edituser.getDeptno());

在点击编号，修改时候就会出现错误：

2005-10-27 15:35:59,245 ERROR [org.hibernate.LazyInitializationException] - could not initialize proxy - the owning Session was closed 
org.hibernate.LazyInitializationException: could not initialize proxy - the owning Session was closed

经过在javaeye论坛大家一致认为 是hibernate lazy的原因

在WEB级别应用时候，会出现意想不到的lazy错误，解决方法就是 设置 lazy="false" 例：

<hibernate-mapping>

 <class name="com.jeedev.hb.TSysuser" table="t_sysuser" lazy="false">